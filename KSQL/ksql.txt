//SET TO EARLIEST
SET 'auto.offset.reset'='earliest';

//INVENTORY STREAMS
CREATE STREAM InventoryEventsStream (ProductName VARCHAR, Quantity INT) WITH (kafka_topic='INVENTORYEVENTS', key='ProductName', value_format='json');
CREATE TABLE  ProductsStock WITH ( partitions=1 )  as select ProductName,sum(Quantity) as Stock from InventoryEventsStream group by ProductName;

// ORDERS STREAMS
CREATE STREAM OrdersCreatedStream (ProductName VARCHAR,Quantity INT, OrderId VARCHAR, User VARCHAR) WITH (kafka_topic='ORDERSEVENTS', key='ProductName', value_format='json');
CREATE TABLE ProductsOrdered WITH ( partitions=1 ) as select ProductName as ProductName,sum(Quantity) as Orders from  ORDERSCREATEDSTREAM group by ProductName;

// join
CREATE TABLE StockByProductTable WITH ( partitions=1 )  AS  SELECT ps.ProductName as ProductName,ps.Stock - op.Orders as Stock FROM PRODUCTSORDERED op JOIN ProductsStock ps ON op.ProductName = ps.ProductName;



//logic: I want the stock left when I make an order
SELECT ocs.OrderId,ocs.User,sbpt.Stock FROM OrdersCreatedStream ocs JOIN  StockByProductTable sbpt ON sbpt.ProductName = ocs.ProductName;



//terminate
DROP STREAM IF EXISTS OrdersCreatedStream DELETE TOPIC;
DROP STREAM IF EXISTS InventoryCommandsStream DELETE TOPIC;
DROP TABLE IF EXISTS ProductsStock DELETE TOPIC;
DROP TABLE IF EXISTS ProductsOrdered DELETE TOPIC;
DROP TABLE IF EXISTS StockByProductTable DELETE TOPIC;
TERMINATE query_id;